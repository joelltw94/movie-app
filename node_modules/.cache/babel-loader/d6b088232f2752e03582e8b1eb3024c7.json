{"ast":null,"code":"var _jsxFileName = \"/Users/Joel/Desktop/react-projects/movie-app/src/PopularMovies.js\";\n// Packages\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Row, Col, Card, Empty, Input } from 'antd';\nimport { useHistory } from 'react-router-dom'; // Components\n\nimport Search from './Search'; // import MovieDetails from './MovieDetails'\n\nconst PopularMovies = () => {\n  const history = useHistory();\n  const [baseUrl, setBaseUrl] = useState('');\n  const [posterSize, setPosterSize] = useState('');\n  const [popularData, setPopularData] = useState([]);\n  const [isPopularMovies, setPopularMovies] = useState(false);\n  const [searchValue, setSearchValue] = useState('');\n  const [searchResults, setSearchResults] = useState([]); // const { Header, Sider, Content, Footer } = Layout\n\n  const {\n    Search\n  } = Input;\n\n  const getInitConfig = () => {\n    console.log(process.env.REACT_APP_API_KEY, 'api key');\n    axios.get('https://api.themoviedb.org/3/configuration?api_key=c1531b875c30a4f389deb26c9dc8e1f4').then(res => {\n      // fetch response\n      const {\n        data: {\n          images: {\n            poster_sizes,\n            base_url\n          }\n        }\n      } = res;\n      setBaseUrl(base_url);\n      setPosterSize(poster_sizes[0]);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const getPopular = () => {\n    setPopularMovies(true);\n    axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=${process.env.API_KEY}&language=en-US&page=1`).then(res => {\n      // console.log(res)\n      const {\n        data: {\n          results\n        }\n      } = res; // console.log(results, 'results')\n      // update array\n\n      setPopularData(results);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleOnChange = e => {\n    console.log(e.target.value);\n  };\n\n  useEffect(() => {\n    getInitConfig();\n    getPopular();\n  }, []); // const handleSearchInput = (input) => {\n  //   console.log(input, 'input')\n  //   if (input) {\n  //     setSearchInput(input)\n  //   } else {\n  //     setSearchInput('')\n  //   }\n  // }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jumbotron\",\n    style: {\n      margin: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Popular Movies\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, isPopularMovies && /*#__PURE__*/React.createElement(Row, {\n    gutter: [16, 32],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, popularData.length ? popularData.map((movieData, i) => {\n    const {\n      id,\n      title,\n      poster_path\n    } = movieData;\n    return /*#__PURE__*/React.createElement(Col, {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      key: i,\n      size: \"small\",\n      style: {\n        width: 200,\n        height: '100%',\n        borderRadius: '20px'\n      },\n      cover: /*#__PURE__*/React.createElement(\"img\", {\n        src: baseUrl + posterSize + poster_path,\n        alt: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 30\n        }\n      }),\n      onClick: () => history.push({\n        pathname: '/movie',\n        state: {\n          id: id\n        }\n      }),\n      hoverable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        textAlign: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 23\n      }\n    }, title)));\n  }) : /*#__PURE__*/React.createElement(Empty, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }))));\n};\n\nexport default PopularMovies;","map":{"version":3,"sources":["/Users/Joel/Desktop/react-projects/movie-app/src/PopularMovies.js"],"names":["React","useState","useEffect","axios","Row","Col","Card","Empty","Input","useHistory","Search","PopularMovies","history","baseUrl","setBaseUrl","posterSize","setPosterSize","popularData","setPopularData","isPopularMovies","setPopularMovies","searchValue","setSearchValue","searchResults","setSearchResults","getInitConfig","console","log","process","env","REACT_APP_API_KEY","get","then","res","data","images","poster_sizes","base_url","catch","err","getPopular","API_KEY","results","handleOnChange","e","target","value","margin","length","map","movieData","i","id","title","poster_path","width","height","borderRadius","push","pathname","state","textAlign"],"mappings":"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","sourcesContent":["// Packages\nimport React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Row, Col, Card, Empty, Input } from 'antd'\nimport { useHistory } from 'react-router-dom'\n\n// Components\nimport Search from './Search'\n// import MovieDetails from './MovieDetails'\n\nconst PopularMovies = () => {\n  const history = useHistory()\n  const [baseUrl, setBaseUrl] = useState('')\n  const [posterSize, setPosterSize] = useState('')\n  const [popularData, setPopularData] = useState([])\n  const [isPopularMovies, setPopularMovies] = useState(false)\n  const [searchValue, setSearchValue] = useState('')\n  const [searchResults, setSearchResults] = useState([])\n\n  // const { Header, Sider, Content, Footer } = Layout\n  const { Search } = Input\n\n  const getInitConfig = () => {\n    console.log(process.env.REACT_APP_API_KEY, 'api key')\n    axios.get('https://api.themoviedb.org/3/configuration?api_key=c1531b875c30a4f389deb26c9dc8e1f4')\n      .then((res) => {\n        // fetch response\n        const { data: { images: { poster_sizes, base_url } } } = res\n        setBaseUrl(base_url)\n        setPosterSize(poster_sizes[0])\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  const getPopular = () => {\n    setPopularMovies(true)\n    axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=${process.env.API_KEY}&language=en-US&page=1`)\n      .then((res) => {\n        // console.log(res)\n        const { data: { results } } = res\n        // console.log(results, 'results')\n        // update array\n        setPopularData(results)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n  const handleOnChange = e => {\n    console.log(e.target.value)\n    \n  }\n\n  useEffect(() => {\n    getInitConfig()\n    getPopular()\n  }, [])\n\n  // const handleSearchInput = (input) => {\n  //   console.log(input, 'input')\n  //   if (input) {\n  //     setSearchInput(input)\n  //   } else {\n  //     setSearchInput('')\n  //   }\n  // }\n  return (\n    <>\n      <div className='jumbotron' style={{ margin: '1rem' }}>\n        <h1>Popular Movies</h1>\n      </div>\n      <div>\n        {isPopularMovies && (\n          <Row gutter={[16, 32]}>\n            {/* {popularData.length ? popularData.map(({ id, title, poster_path, release_date, overview }, i) => { */}\n            {popularData.length ? popularData.map((movieData, i) => {\n              const { id, title, poster_path } = movieData\n              return (\n                <Col key={i}>\n                  {/* <Link to='/MovieDetails'> */}\n                    <Card\n                      key={i}\n                      size='small'\n                      style={{ width: 200, height: '100%', borderRadius: '20px' }}\n                      cover={<img src={baseUrl + posterSize + poster_path} alt={i} />}\n                      onClick={() => history.push({ pathname: '/movie', state: { id: id } })}\n                      hoverable\n                    >\n                      <h4 style={{ textAlign: 'left' }}>{title}</h4>\n                    </Card>\n                  {/* </Link> */}\n                </Col>\n              )\n            })\n              : <Empty />}\n          </Row>\n        )}\n\n      </div>\n    </>\n  )\n}\n\nexport default PopularMovies\n"]},"metadata":{},"sourceType":"module"}