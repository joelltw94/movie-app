{"ast":null,"code":"var _jsxFileName = \"/Users/Joel/Desktop/react-projects/movie-app/src/Search.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Input, Row, Col, Card, Button } from 'antd';\nimport './index.css';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\n\nconst Search = () => {\n  const [searchValue, setSearchValue] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [baseUrl, setBaseUrl] = useState('');\n  const [posterSize, setPosterSize] = useState(''); // TO-DO\n  // Write a function to call API to get search results\n\n  const handleSearch = searchValueInput => {\n    axios.get('https://api.themoviedb.org/3/search/movie?api_key=c1531b875c30a4f389deb26c9dc8e1f4&language=en-US&query=%27%27&page=1&include_adult=false', {\n      params: {\n        query: searchValueInput\n      }\n    }).then(res => {\n      // fetch response\n      const {\n        data: {\n          results\n        }\n      } = res; // Assign to setSearchResults - setSearchResults(data)\n\n      setSearchResults(results);\n    }).catch(err => {\n      console.log(err);\n    }); // .finally(setSearchValue('')) // clear search values)\n\n    setSearchValue('');\n  };\n\n  const getInitConfig = () => {\n    axios.get('https://api.themoviedb.org/3/configuration?api_key=c1531b875c30a4f389deb26c9dc8e1f4').then(res => {\n      // fetch response\n      const {\n        data: {\n          images: {\n            poster_sizes,\n            base_url\n          }\n        }\n      } = res;\n      setBaseUrl(base_url);\n      setPosterSize(poster_sizes[1]);\n    }).catch(err => {\n      console.log(err);\n    });\n  }; // update as user types\n\n\n  const handleOnChange = e => {\n    if (e && e.target && e.target.value) {\n      setSearchValue(e.target.value);\n      console.log(e, e.target.value);\n    } else {\n      setSearchValue(''); // clear search values\n    }\n  };\n\n  useEffect(() => {\n    getInitConfig();\n  }, []); // clear search field\n\n  const {\n    Search\n  } = Input;\n  const {\n    Meta\n  } = Card;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Search, {\n    placeholder: \"Search For Popular Movies\" // set value\n    ,\n    value: searchValue // update func to new value\n    ,\n    onChange: handleOnChange,\n    onSearch: handleSearch,\n    style: {\n      width: 300,\n      marginRight: '10px'\n    },\n    enterButton: \"Search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"default\",\n    onClick: () => setSearchResults([]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"Clear\"), /*#__PURE__*/React.createElement(Row, {\n    gutter: [16, 32],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, searchResults.length ? searchResults.map(({\n    title,\n    poster_path\n  }, i) => {\n    console.log(title, 'title');\n\n    if (poster_path === null) {// <img src={Logo} alt='webite logo'/>\n      // <Col>\n      //   <Image src='Styles.js/logo.svg' />\n      // </Col>\n    } else {\n      return /*#__PURE__*/React.createElement(Col, {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        size: \"large\",\n        title: title,\n        style: {\n          width: 200\n        },\n        cover: /*#__PURE__*/React.createElement(\"img\", {\n          src: baseUrl + posterSize + poster_path,\n          alt: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 26\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Meta, {\n        title: title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 19\n        }\n      })));\n    }\n  }) : ''));\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/Joel/Desktop/react-projects/movie-app/src/Search.js"],"names":["React","useState","useEffect","Input","Row","Col","Card","Button","axios","Search","searchValue","setSearchValue","searchResults","setSearchResults","baseUrl","setBaseUrl","posterSize","setPosterSize","handleSearch","searchValueInput","get","params","query","then","res","data","results","catch","err","console","log","getInitConfig","images","poster_sizes","base_url","handleOnChange","e","target","value","Meta","width","marginRight","length","map","title","poster_path","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,MAAhC,QAA8C,MAA9C;AACA,OAAO,aAAP;AACA,OAAO,WAAP;AACA,OAAO,oBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,EAAD,CAA5C,CAJmB,CAMnB;AACA;;AACA,QAAMiB,YAAY,GAAIC,gBAAD,IAAsB;AACzCX,IAAAA,KAAK,CAACY,GAAN,CAAU,2IAAV,EAAuJ;AACrJC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAEH;AADD;AAD6I,KAAvJ,EAKGI,IALH,CAKSC,GAAD,IAAS;AACb;AACA,YAAM;AAAEC,QAAAA,IAAI,EAAE;AAAEC,UAAAA;AAAF;AAAR,UAAwBF,GAA9B,CAFa,CAGb;;AACAX,MAAAA,gBAAgB,CAACa,OAAD,CAAhB;AACD,KAVH,EAWGC,KAXH,CAWUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAbH,EADyC,CAezC;;AACAjB,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAjBD;;AAmBA,QAAMoB,aAAa,GAAG,MAAM;AAC1BvB,IAAAA,KAAK,CAACY,GAAN,CAAU,qFAAV,EACGG,IADH,CACSC,GAAD,IAAS;AACb;AACA,YAAM;AAAEC,QAAAA,IAAI,EAAE;AAAEO,UAAAA,MAAM,EAAE;AAAEC,YAAAA,YAAF;AAAgBC,YAAAA;AAAhB;AAAV;AAAR,UAAmDV,GAAzD;AACAT,MAAAA,UAAU,CAACmB,QAAD,CAAV;AACAjB,MAAAA,aAAa,CAACgB,YAAY,CAAC,CAAD,CAAb,CAAb;AACD,KANH,EAOGN,KAPH,CAOUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KATH;AAUD,GAXD,CA3BmB,CAwCnB;;;AACA,QAAMO,cAAc,GAAIC,CAAD,IAAO;AAC5B,QAAIA,CAAC,IAAIA,CAAC,CAACC,MAAP,IAAiBD,CAAC,CAACC,MAAF,CAASC,KAA9B,EAAqC;AACnC3B,MAAAA,cAAc,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYM,CAAZ,EAAeA,CAAC,CAACC,MAAF,CAASC,KAAxB;AACD,KAHD,MAGO;AACL3B,MAAAA,cAAc,CAAC,EAAD,CAAd,CADK,CACc;AACpB;AACF,GAPD;;AASAT,EAAAA,SAAS,CAAC,MAAM;AACd6B,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT,CAlDmB,CAsDnB;;AAEA,QAAM;AAAEtB,IAAAA;AAAF,MAAaN,KAAnB;AAEA,QAAM;AAAEoC,IAAAA;AAAF,MAAWjC,IAAjB;AAEA,sBACE,uDACE,oBAAC,MAAD;AACE,IAAA,WAAW,EAAC,2BADd,CAEE;AAFF;AAGE,IAAA,KAAK,EAAEI,WAHT,CAIE;AAJF;AAKE,IAAA,QAAQ,EAAEyB,cALZ;AAME,IAAA,QAAQ,EAAEjB,YANZ;AAOE,IAAA,KAAK,EAAE;AAAEsB,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,WAAW,EAAE;AAA3B,KAPT;AAQE,IAAA,WAAW,EAAC,QARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAWE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAE,MAAM5B,gBAAgB,CAAC,EAAD,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAXF,eAaE,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,aAAa,CAAC8B,MAAd,GAAuB9B,aAAa,CAAC+B,GAAd,CAAkB,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,EAAyBC,CAAzB,KAA+B;AACvEjB,IAAAA,OAAO,CAACC,GAAR,CAAYc,KAAZ,EAAmB,OAAnB;;AACA,QAAIC,WAAW,KAAK,IAApB,EAA0B,CACxB;AACA;AACA;AACA;AACD,KALD,MAKO;AACL,0BACE,oBAAC,GAAD;AAAK,QAAA,GAAG,EAAEC,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,KAAK,EAAEF,KAFT;AAGE,QAAA,KAAK,EAAE;AAAEJ,UAAAA,KAAK,EAAE;AAAT,SAHT;AAIE,QAAA,KAAK,eAAE;AAAK,UAAA,GAAG,EAAE1B,OAAO,GAAGE,UAAV,GAAuB6B,WAAjC;AAA8C,UAAA,GAAG,EAAEC,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAME,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF,CADF;AAYD;AACF,GArBuB,CAAvB,GAsBG,EAvBN,CAbF,CADF;AAyCD,CArGD;;AAuGC,eAAenC,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Input, Row, Col, Card, Button } from 'antd'\nimport './index.css'\nimport './App.css'\nimport 'antd/dist/antd.css'\nimport axios from 'axios'\n\nconst Search = () => {\n  const [searchValue, setSearchValue] = useState('')\n  const [searchResults, setSearchResults] = useState([])\n  const [baseUrl, setBaseUrl] = useState('')\n  const [posterSize, setPosterSize] = useState('')\n\n  // TO-DO\n  // Write a function to call API to get search results\n  const handleSearch = (searchValueInput) => {\n    axios.get('https://api.themoviedb.org/3/search/movie?api_key=c1531b875c30a4f389deb26c9dc8e1f4&language=en-US&query=%27%27&page=1&include_adult=false', {\n      params: {\n        query: searchValueInput\n      }\n    })\n      .then((res) => {\n        // fetch response\n        const { data: { results } } = res\n        // Assign to setSearchResults - setSearchResults(data)\n        setSearchResults(results)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n    // .finally(setSearchValue('')) // clear search values)\n    setSearchValue('')\n  }\n\n  const getInitConfig = () => {\n    axios.get('https://api.themoviedb.org/3/configuration?api_key=c1531b875c30a4f389deb26c9dc8e1f4')\n      .then((res) => {\n        // fetch response\n        const { data: { images: { poster_sizes, base_url } } } = res\n        setBaseUrl(base_url)\n        setPosterSize(poster_sizes[1])\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  // update as user types\n  const handleOnChange = (e) => {\n    if (e && e.target && e.target.value) {\n      setSearchValue(e.target.value)\n      console.log(e, e.target.value)\n    } else {\n      setSearchValue('') // clear search values\n    }\n  }\n\n  useEffect(() => {\n    getInitConfig()\n  }, [])\n\n  // clear search field\n\n  const { Search } = Input\n\n  const { Meta } = Card\n\n  return (\n    <>\n      <Search\n        placeholder='Search For Popular Movies'\n        // set value\n        value={searchValue}\n        // update func to new value\n        onChange={handleOnChange}\n        onSearch={handleSearch}\n        style={{ width: 300, marginRight: '10px' }}\n        enterButton='Search'\n      />\n      <Button type='default' onClick={() => setSearchResults([])}>Clear</Button>\n\n      <Row gutter={[16, 32]}>\n        {searchResults.length ? searchResults.map(({ title, poster_path }, i) => {\n          console.log(title, 'title')\n          if (poster_path === null) {\n            // <img src={Logo} alt='webite logo'/>\n            // <Col>\n            //   <Image src='Styles.js/logo.svg' />\n            // </Col>\n          } else {\n            return (\n              <Col key={i}>\n                <Card\n                  size='large'\n                  title={title}\n                  style={{ width: 200 }}\n                  cover={<img src={baseUrl + posterSize + poster_path} alt={i} />}\n                >\n                  <Meta title={title} />\n                </Card>\n              </Col>\n            )\n          }\n        })\n          : ''}\n      </Row>\n    </>\n  )\n}\n\n export default Search\n\n\n"]},"metadata":{},"sourceType":"module"}